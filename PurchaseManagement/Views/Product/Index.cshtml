@using Bussiness.Product
@model List<Products>
@{
    ViewData["Title"] = "Index";
}

<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />

<div class="container">
    <!-- Check if there's a notification message stored in ViewBag.message -->
    @if (!string.IsNullOrEmpty(ViewBag.message))
    {
        <div class="alert alert-info alert-dismissible fade show" role="alert">
            @ViewBag.message <a asp-action="Index" asp-controller="Cart">Go to cart click here</a>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-4">
                <form method="post" asp-action="Index" asp-controller="Product">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h5 class="card-title">@item.Name</h5>
                            <input type="hidden" name="Id" asp-for="@item.Id" />
                            <p class="card-text">Price: $@item.Price</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <button class="btn btn-sm btn-primary buy-now-button" type="submit">Add To Cart</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        }
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
    // JavaScript to handle quantity change
    document.querySelectorAll('.card').forEach(card => {
        const decreaseBtn = card.querySelector('.decrease');
        const increaseBtn = card.querySelector('.increase');
        const quantityInput = card.querySelector('.quantity-input');

        decreaseBtn.addEventListener('click', () => {
            const currentValue = parseInt(quantityInput.value);
            if (currentValue > 1) {
                quantityInput.value = currentValue - 1;
            }
        });

        increaseBtn.addEventListener('click', () => {
            const currentValue = parseInt(quantityInput.value);
            quantityInput.value = currentValue + 1;
        });
    });
</script>
